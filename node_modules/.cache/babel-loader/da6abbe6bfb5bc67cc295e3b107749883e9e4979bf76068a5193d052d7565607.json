{"ast":null,"code":"var _jsxFileName = \"/workspaces/PMP-exam-timer/src/ExamTimerApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExamTimerApp() {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [totalQuestions, setTotalQuestions] = useState(5);\n  const [estimatedTime, setEstimatedTime] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(600);\n  const [questionTime, setQuestionTime] = useState(0);\n  const [stage, setStage] = useState(\"input\");\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [dynamicInsight, setDynamicInsight] = useState(\"🧠 PMP Insight will appear here.\");\n  useEffect(() => {\n    let timer;\n    if (stage === \"exam\" && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft(prev => Math.max(0, prev - 1));\n        setQuestionTime(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [stage, timeLeft]);\n  const formatTime = sec => `${Math.floor(sec / 60)}m ${sec % 60}s`;\n  const handleSettingsSubmit = async e => {\n    e.preventDefault();\n    const perQuestionSec = 230 / 180 * 60;\n    const totalTimeCalc = Math.ceil(perQuestionSec * totalQuestions);\n    setEstimatedTime(totalTimeCalc);\n    setTimeLeft(totalTimeCalc);\n    setStage(\"loading\");\n    try {\n      const response = await fetch(\"https://your-backend-name.onrender.com/generate-questions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          count: totalQuestions\n        })\n      });\n      const data = await response.json();\n      if (!data.questions || !Array.isArray(data.questions)) throw new Error(\"Invalid response format\");\n      setQuestions(data.questions);\n      setDynamicInsight(data.insight || \"Stay sharp! PMP standards are evolving constantly.\");\n      setStage(\"ready\");\n    } catch (err) {\n      alert(\"Failed to fetch questions: \" + err.message);\n      setStage(\"input\");\n    }\n  };\n  const handleStartExam = () => {\n    setStage(\"exam\");\n    setQuestionTime(0);\n  };\n  const handleNext = () => {\n    const currentQ = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQ.answer;\n    setSelectedAnswers(prev => ({\n      ...prev,\n      [currentQuestionIndex]: {\n        selected: selectedOption,\n        time: questionTime,\n        correct: isCorrect,\n        question: currentQ.question,\n        answer: currentQ.answer,\n        rationale: currentQ.rationale,\n        eco_task: currentQ.eco_task\n      }\n    }));\n    if (isCorrect) setScore(prev => prev + 1);\n    if (currentQuestionIndex + 1 < totalQuestions) {\n      setCurrentQuestionIndex(prev => prev + 1);\n      setQuestionTime(0);\n      setSelectedOption(\"\");\n    } else {\n      setStage(\"result\");\n    }\n  };\n  const handleDownloadExcel = () => {\n    const data = Object.entries(selectedAnswers).map(([idx, val]) => ({\n      \"Q#\": Number(idx) + 1,\n      Question: val.question,\n      \"Your Answer\": val.selected,\n      \"Correct Answer\": val.answer,\n      \"Correct?\": val.correct ? \"✅ Yes\" : \"❌ No\",\n      \"Time Taken (s)\": val.time,\n      Rationale: val.rationale,\n      \"ECO Task\": val.eco_task\n    }));\n    const sheet = XLSX.utils.json_to_sheet(data);\n    const book = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(book, sheet, \"PMP Results\");\n    XLSX.writeFile(book, \"pmp_exam_results.xlsx\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 max-w-4xl mx-auto bg-white rounded-xl shadow-md space-y-4\",\n    children: [stage === \"input\" && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSettingsSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-bold text-center text-blue-800\",\n        children: \"\\uD83D\\uDCCA PMP Exam Trainer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-sm text-gray-600 italic\",\n        children: \"\\uD83C\\uDFAF You get 230 minutes for 180 questions. That\\u2019s ~1.28 min per question.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center text-blue-700 italic\",\n        children: [\"\\uD83D\\uDCA1 \", dynamicInsight]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"\\uD83D\\uDC64 Enter Your Name\",\n        className: \"w-full p-2 border rounded\",\n        value: userName,\n        onChange: e => setUserName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        min: 1,\n        required: true,\n        placeholder: \"\\uD83D\\uDD22 No. of Questions\",\n        className: \"w-full p-2 border rounded\",\n        value: totalQuestions,\n        onChange: e => setTotalQuestions(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-500\",\n        children: [\"\\u23F1\\uFE0F Estimated Time: \", formatTime(estimatedTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\",\n        children: \"Generate Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), stage === \"ready\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: \"\\u2705 Questions Ready!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600 text-sm mb-4\",\n        children: [\"Estimated Time: \", formatTime(estimatedTime)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartExam,\n        className: \"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\",\n        children: \"Start Exam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), stage === \"exam\" && questions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-gray-600 mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u23F0 Time Left: \", formatTime(timeLeft)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\uD83D\\uDCCD Q\", currentQuestionIndex + 1, \" of \", totalQuestions]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u23F3 Time on Question: \", formatTime(questionTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-50 p-4 rounded shadow\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"font-semibold\",\n          children: [\"Q\", currentQuestionIndex + 1, \": \", questions[currentQuestionIndex].question]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), questions[currentQuestionIndex].options.map((opt, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"block cursor-pointer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"option\",\n              value: opt,\n              className: \"mr-2\",\n              checked: selectedOption === opt,\n              onChange: () => setSelectedOption(opt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), opt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), selectedOption === opt && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-1 text-sm text-gray-600\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uD83D\\uDCDA Rationale:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), \" \", questions[currentQuestionIndex].rationale, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 95\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\uD83D\\uDCCC ECO Task:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this), \" \", questions[currentQuestionIndex].eco_task]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 19\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !selectedOption,\n        onClick: handleNext,\n        className: \"mt-4 w-full bg-purple-600 text-white py-2 rounded hover:bg-purple-700\",\n        children: currentQuestionIndex + 1 === totalQuestions ? \"Finish Exam\" : \"Next Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 text-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uD83D\\uDCC8 Real-Time Log\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-4 mt-1\",\n          children: Object.entries(selectedAnswers).map(([key, val]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Q\", Number(key) + 1, \": \", formatTime(val.time), \" \\u2013 \", val.selected, \" \", val.selected === val.answer ? \"✔ Correct\" : \"❌ Wrong\"]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), stage === \"result\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold\",\n        children: \"\\uD83C\\uDF89 Exam Completed!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [userName, \", you scored \", score, \" out of \", totalQuestions, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadExcel,\n        className: \"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\",\n        children: \"Download Excel Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        className: \"ml-2 bg-gray-500 text-white py-2 px-4 rounded hover:bg-gray-600\",\n        children: \"Back to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(ExamTimerApp, \"DtvTfGglOOkr3JMYmnHI6VH+vLU=\");\n_c = ExamTimerApp;\nvar _c;\n$RefreshReg$(_c, \"ExamTimerApp\");","map":{"version":3,"names":["React","useState","useEffect","XLSX","jsxDEV","_jsxDEV","ExamTimerApp","_s","userName","setUserName","totalQuestions","setTotalQuestions","estimatedTime","setEstimatedTime","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","timeLeft","setTimeLeft","questionTime","setQuestionTime","stage","setStage","selectedOption","setSelectedOption","score","setScore","dynamicInsight","setDynamicInsight","timer","setInterval","prev","Math","max","clearInterval","formatTime","sec","floor","handleSettingsSubmit","e","preventDefault","perQuestionSec","totalTimeCalc","ceil","response","fetch","method","headers","body","JSON","stringify","count","data","json","Array","isArray","Error","insight","err","alert","message","handleStartExam","handleNext","currentQ","isCorrect","answer","selected","time","correct","question","rationale","eco_task","handleDownloadExcel","Object","entries","map","idx","val","Number","Question","Rationale","sheet","utils","json_to_sheet","book","book_new","book_append_sheet","writeFile","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","required","placeholder","value","onChange","target","min","onClick","length","options","opt","name","checked","disabled","key","window","location","reload","_c","$RefreshReg$"],"sources":["/workspaces/PMP-exam-timer/src/ExamTimerApp.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as XLSX from \"xlsx\";\n\nexport default function ExamTimerApp() {\n  const [userName, setUserName] = useState(\"\");\n  const [totalQuestions, setTotalQuestions] = useState(5);\n  const [estimatedTime, setEstimatedTime] = useState(0);\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(600);\n  const [questionTime, setQuestionTime] = useState(0);\n  const [stage, setStage] = useState(\"input\");\n  const [selectedOption, setSelectedOption] = useState(\"\");\n  const [score, setScore] = useState(0);\n  const [dynamicInsight, setDynamicInsight] = useState(\"🧠 PMP Insight will appear here.\");\n\n  useEffect(() => {\n    let timer;\n    if (stage === \"exam\" && timeLeft > 0) {\n      timer = setInterval(() => {\n        setTimeLeft((prev) => Math.max(0, prev - 1));\n        setQuestionTime((prev) => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(timer);\n  }, [stage, timeLeft]);\n\n  const formatTime = (sec) => `${Math.floor(sec / 60)}m ${sec % 60}s`;\n\n  const handleSettingsSubmit = async (e) => {\n    e.preventDefault();\n    const perQuestionSec = (230 / 180) * 60;\n    const totalTimeCalc = Math.ceil(perQuestionSec * totalQuestions);\n    setEstimatedTime(totalTimeCalc);\n    setTimeLeft(totalTimeCalc);\n    setStage(\"loading\");\n\n    try {\n      const response = await fetch(\"https://your-backend-name.onrender.com/generate-questions\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ count: totalQuestions }),\n      });\n\n      const data = await response.json();\n      if (!data.questions || !Array.isArray(data.questions)) throw new Error(\"Invalid response format\");\n\n      setQuestions(data.questions);\n      setDynamicInsight(data.insight || \"Stay sharp! PMP standards are evolving constantly.\");\n      setStage(\"ready\");\n    } catch (err) {\n      alert(\"Failed to fetch questions: \" + err.message);\n      setStage(\"input\");\n    }\n  };\n\n  const handleStartExam = () => {\n    setStage(\"exam\");\n    setQuestionTime(0);\n  };\n\n  const handleNext = () => {\n    const currentQ = questions[currentQuestionIndex];\n    const isCorrect = selectedOption === currentQ.answer;\n\n    setSelectedAnswers((prev) => ({\n      ...prev,\n      [currentQuestionIndex]: {\n        selected: selectedOption,\n        time: questionTime,\n        correct: isCorrect,\n        question: currentQ.question,\n        answer: currentQ.answer,\n        rationale: currentQ.rationale,\n        eco_task: currentQ.eco_task,\n      },\n    }));\n\n    if (isCorrect) setScore((prev) => prev + 1);\n\n    if (currentQuestionIndex + 1 < totalQuestions) {\n      setCurrentQuestionIndex((prev) => prev + 1);\n      setQuestionTime(0);\n      setSelectedOption(\"\");\n    } else {\n      setStage(\"result\");\n    }\n  };\n\n  const handleDownloadExcel = () => {\n    const data = Object.entries(selectedAnswers).map(([idx, val]) => ({\n      \"Q#\": Number(idx) + 1,\n      Question: val.question,\n      \"Your Answer\": val.selected,\n      \"Correct Answer\": val.answer,\n      \"Correct?\": val.correct ? \"✅ Yes\" : \"❌ No\",\n      \"Time Taken (s)\": val.time,\n      Rationale: val.rationale,\n      \"ECO Task\": val.eco_task,\n    }));\n\n    const sheet = XLSX.utils.json_to_sheet(data);\n    const book = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(book, sheet, \"PMP Results\");\n    XLSX.writeFile(book, \"pmp_exam_results.xlsx\");\n  };\n\n  return (\n    <div className=\"p-4 max-w-4xl mx-auto bg-white rounded-xl shadow-md space-y-4\">\n      {stage === \"input\" && (\n        <form onSubmit={handleSettingsSubmit} className=\"space-y-4\">\n          <h1 className=\"text-3xl font-bold text-center text-blue-800\">📊 PMP Exam Trainer</h1>\n          <p className=\"text-center text-sm text-gray-600 italic\">\n            🎯 You get 230 minutes for 180 questions. That’s ~1.28 min per question.\n          </p>\n          <p className=\"text-center text-blue-700 italic\">💡 {dynamicInsight}</p>\n          <input\n            type=\"text\"\n            required\n            placeholder=\"👤 Enter Your Name\"\n            className=\"w-full p-2 border rounded\"\n            value={userName}\n            onChange={(e) => setUserName(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            min={1}\n            required\n            placeholder=\"🔢 No. of Questions\"\n            className=\"w-full p-2 border rounded\"\n            value={totalQuestions}\n            onChange={(e) => setTotalQuestions(Number(e.target.value))}\n          />\n          <p className=\"text-sm text-gray-500\">⏱️ Estimated Time: {formatTime(estimatedTime)}</p>\n          <button className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\">\n            Generate Questions\n          </button>\n        </form>\n      )}\n\n      {stage === \"ready\" && (\n        <div className=\"text-center\">\n          <h2 className=\"text-xl font-semibold\">✅ Questions Ready!</h2>\n          <p className=\"text-gray-600 text-sm mb-4\">Estimated Time: {formatTime(estimatedTime)}</p>\n          <button\n            onClick={handleStartExam}\n            className=\"bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700\"\n          >\n            Start Exam\n          </button>\n        </div>\n      )}\n\n      {stage === \"exam\" && questions.length > 0 && (\n        <div>\n          <div className=\"flex justify-between text-xs text-gray-600 mb-2\">\n            <span>⏰ Time Left: {formatTime(timeLeft)}</span>\n            <span>📍 Q{currentQuestionIndex + 1} of {totalQuestions}</span>\n            <span>⏳ Time on Question: {formatTime(questionTime)}</span>\n          </div>\n\n          <div className=\"bg-gray-50 p-4 rounded shadow\">\n            <p className=\"font-semibold\">\n              Q{currentQuestionIndex + 1}: {questions[currentQuestionIndex].question}\n            </p>\n            {questions[currentQuestionIndex].options.map((opt, idx) => (\n              <div key={idx} className=\"mt-2\">\n                <label className=\"block cursor-pointer\">\n                  <input\n                    type=\"radio\"\n                    name=\"option\"\n                    value={opt}\n                    className=\"mr-2\"\n                    checked={selectedOption === opt}\n                    onChange={() => setSelectedOption(opt)}\n                  />\n                  {opt}\n                </label>\n                {selectedOption === opt && (\n                  <div className=\"mt-1 text-sm text-gray-600\">\n                    <strong>📚 Rationale:</strong> {questions[currentQuestionIndex].rationale}<br />\n                    <strong>📌 ECO Task:</strong> {questions[currentQuestionIndex].eco_task}\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n\n          <button\n            disabled={!selectedOption}\n            onClick={handleNext}\n            className=\"mt-4 w-full bg-purple-600 text-white py-2 rounded hover:bg-purple-700\"\n          >\n            {currentQuestionIndex + 1 === totalQuestions ? \"Finish Exam\" : \"Next Question\"}\n          </button>\n\n          <div className=\"mt-4 text-sm\">\n            <strong>📈 Real-Time Log</strong>\n            <ul className=\"list-disc pl-4 mt-1\">\n              {Object.entries(selectedAnswers).map(([key, val]) => (\n                <li key={key}>\n                  Q{Number(key) + 1}: {formatTime(val.time)} – {val.selected}{\" \"}\n                  {val.selected === val.answer ? \"✔ Correct\" : \"❌ Wrong\"}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n\n      {stage === \"result\" && (\n        <div className=\"text-center space-y-4\">\n          <h2 className=\"text-2xl font-bold\">🎉 Exam Completed!</h2>\n          <p>{userName}, you scored {score} out of {totalQuestions}.</p>\n          <button\n            onClick={handleDownloadExcel}\n            className=\"bg-blue-600 text-white py-2 px-4 rounded hover:bg-blue-700\"\n          >\n            Download Excel Log\n          </button>\n          <button\n            onClick={() => window.location.reload()}\n            className=\"ml-2 bg-gray-500 text-white py-2 px-4 rounded hover:bg-gray-600\"\n          >\n            Back to Home\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}